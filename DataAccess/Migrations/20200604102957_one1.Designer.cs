// <auto-generated />
using System;
using BalticSportAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BalticSportAPI.Migrations
{
    [DbContext(typeof(BalticSportDbContext))]
    [Migration("20200604102957_one1")]
    partial class one1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BalticSportAPI.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BalticSportAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerIdId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SellerIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerIdId");

                    b.HasIndex("SellerIdId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BalticSportAPI.Models.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderIdId")
                        .HasColumnType("int");

                    b.Property<int>("OrderQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("ProductIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderIdId");

                    b.HasIndex("ProductIdId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("BalticSportAPI.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("BalticSportAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long>("ProductPrice")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierIdId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BalticSportAPI.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("BalticSportAPI.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("BalticSportAPI.Models.Order", b =>
                {
                    b.HasOne("BalticSportAPI.Models.Customer", "CustomerId")
                        .WithMany()
                        .HasForeignKey("CustomerIdId");

                    b.HasOne("BalticSportAPI.Models.Seller", "SellerId")
                        .WithMany()
                        .HasForeignKey("SellerIdId");
                });

            modelBuilder.Entity("BalticSportAPI.Models.OrderLine", b =>
                {
                    b.HasOne("BalticSportAPI.Models.Order", "OrderId")
                        .WithMany()
                        .HasForeignKey("OrderIdId");

                    b.HasOne("BalticSportAPI.Models.Product", "ProductId")
                        .WithMany()
                        .HasForeignKey("ProductIdId");
                });

            modelBuilder.Entity("BalticSportAPI.Models.Phone", b =>
                {
                    b.HasOne("BalticSportAPI.Models.Customer", null)
                        .WithMany("Phone")
                        .HasForeignKey("CustomerId");

                    b.HasOne("BalticSportAPI.Models.Seller", null)
                        .WithMany("Phone")
                        .HasForeignKey("SellerId");

                    b.HasOne("BalticSportAPI.Models.Supplier", null)
                        .WithMany("PhoneId")
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("BalticSportAPI.Models.Product", b =>
                {
                    b.HasOne("BalticSportAPI.Models.Supplier", "SupplierId")
                        .WithMany()
                        .HasForeignKey("SupplierIdId");
                });
#pragma warning restore 612, 618
        }
    }
}
